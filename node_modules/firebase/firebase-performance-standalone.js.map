{"version":3,"file":"firebase-performance-standalone.js","sources":["../../node_modules/tslib/tslib.es6.js","../util/src/deepCopy.ts","../util/src/errors.ts","../app/src/errors.ts","../app/src/constants.ts","../app/src/lite/firebaseAppLite.ts","../app/src/firebaseNamespaceCore.ts","../app/index.lite.ts","../app/src/lite/firebaseNamespaceLite.ts","../../node_modules/idb/lib/idb.mjs","../installations/src/util/constants.ts","../installations/src/util/errors.ts","../installations/src/helpers/extract-app-config.ts","../installations/src/api/common.ts","../installations/src/util/sleep.ts","../installations/src/helpers/buffer-to-base64-url-safe.ts","../installations/src/helpers/generate-fid.ts","../installations/src/helpers/idb-manager.ts","../logger/src/logger.ts","../installations/src/helpers/get-installation-entry.ts","../installations/src/api/create-installation.ts","../installations/src/api/generate-auth-token.ts","../installations/src/functions/get-token.ts","../installations/src/api/delete-installation.ts","../installations/src/index.ts","../installations/src/functions/get-id.ts","../installations/src/functions/delete-installation.ts","../performance/src/services/api_service.ts","../performance/src/services/settings_service.ts","../performance/src/constants.ts","../performance/src/utils/errors.ts","../performance/src/services/iid_service.ts","../performance/src/utils/attributes_utils.ts","../performance/src/utils/console_logger.ts","../performance/src/services/remote_config_service.ts","../performance/src/services/initialization_service.ts","../performance/src/services/cc_service.ts","../performance/src/services/perf_logger.ts","../performance/src/resources/trace.ts","../performance/src/resources/network_request.ts","../performance/src/services/oob_resources_service.ts","../performance/src/controllers/perf.ts","../performance/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value);\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n */\nexport function deepExtend(target: any, source: any): any {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      let dateValue = (source as any) as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (let prop in source) {\n    if (!source.hasOwnProperty(prop)) {\n      continue;\n    }\n    target[prop] = deepExtend(target[prop], source[prop]);\n  }\n\n  return target;\n}\n\n// TODO: Really needed (for JSCompiler type checking)?\nexport function patchProperty(obj: any, prop: string, value: any) {\n  obj[prop] = value;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if (e.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: StringLike | undefined;\n}\n\nexport interface FirebaseError extends Error, ErrorData {\n  // Unique code for error - format is service/error-code-string.\n  readonly code: string;\n\n  // Developer-friendly error message.\n  readonly message: string;\n\n  // Always 'FirebaseError'.\n  readonly name: typeof ERROR_NAME;\n\n  // Where available - stack backtrace in a string.\n  readonly stack?: string;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  readonly name = ERROR_NAME;\n\n  constructor(readonly code: string, message: string) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<ErrorCode extends string> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create(code: ErrorCode, data: ErrorData = {}): FirebaseError {\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, data) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage);\n\n    // Keys with an underscore at the end of their name are not included in\n    // error.data for some reason.\n    // TODO: Replace with Object.entries when lib is updated to es2017.\n    for (const key of Object.keys(data)) {\n      if (key.slice(-1) !== '_') {\n        if (key in error) {\n          console.warn(\n            `Overwriting FirebaseError base field \"${key}\" can cause unexpected behavior.`\n          );\n        }\n        error[key] = data[key];\n      }\n    }\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? value.toString() : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  DUPLICATE_SERVICE = 'duplicate-service',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$name}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$name}\",\n  [AppError.DUPLICATE_APP]: \"Firebase App named '{$name}' already exists\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$name}' already deleted\",\n  [AppError.DUPLICATE_SERVICE]:\n    \"Firebase service named '{$name}' already registered\",\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$name}() takes either no argument or a ' +\n    'Firebase App instance.'\n};\n\nconst appErrors = new ErrorFactory<AppError>('app', 'Firebase', ERRORS);\n\nexport function error(code: AppError, args?: { [name: string]: any }) {\n  throw appErrors.create(code, args);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppConfig\n} from '@firebase/app-types';\nimport {\n  _FirebaseApp,\n  _FirebaseNamespace,\n  FirebaseService\n} from '@firebase/app-types/private';\nimport { deepCopy, deepExtend } from '@firebase/util';\nimport { error, AppError } from '../errors';\nimport { DEFAULT_ENTRY_NAME } from '../constants';\n\ninterface ServicesCache {\n  [name: string]: {\n    [serviceName: string]: FirebaseService;\n  };\n}\n\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n */\nexport class FirebaseAppLiteImpl implements FirebaseApp {\n  private readonly options_: FirebaseOptions;\n  private readonly name_: string;\n  private isDeleted_ = false;\n  private services_: ServicesCache = {};\n  private automaticDataCollectionEnabled_: boolean;\n\n  // lite version has an empty INTERNAL namespace\n  readonly INTERNAL = {};\n\n  constructor(\n    options: FirebaseOptions,\n    config: FirebaseAppConfig,\n    private readonly firebase_: _FirebaseNamespace\n  ) {\n    this.name_ = config.name!;\n    this.automaticDataCollectionEnabled_ =\n      config.automaticDataCollectionEnabled || false;\n    this.options_ = deepCopy<FirebaseOptions>(options);\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed_();\n    return this.automaticDataCollectionEnabled_;\n  }\n\n  set automaticDataCollectionEnabled(val) {\n    this.checkDestroyed_();\n    this.automaticDataCollectionEnabled_ = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed_();\n    return this.name_;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed_();\n    return this.options_;\n  }\n\n  delete(): Promise<void> {\n    return new Promise(resolve => {\n      this.checkDestroyed_();\n      resolve();\n    })\n      .then(() => {\n        this.firebase_.INTERNAL.removeApp(this.name_);\n        const services: FirebaseService[] = [];\n\n        for (const serviceKey of Object.keys(this.services_)) {\n          for (const instanceKey of Object.keys(this.services_[serviceKey])) {\n            services.push(this.services_[serviceKey][instanceKey]);\n          }\n        }\n\n        return Promise.all(\n          services.map(service => {\n            return service.INTERNAL.delete();\n          })\n        );\n      })\n      .then(\n        (): void => {\n          this.isDeleted_ = true;\n          this.services_ = {};\n        }\n      );\n  }\n\n  /**\n   * Return a service instance associated with this app (creating it\n   * on demand), identified by the passed instanceIdentifier.\n   *\n   * NOTE: Currently storage is the only one that is leveraging this\n   * functionality. They invoke it by calling:\n   *\n   * ```javascript\n   * firebase.app().storage('STORAGE BUCKET ID')\n   * ```\n   *\n   * The service name is passed to this already\n   * @internal\n   */\n  _getService(\n    name: string,\n    instanceIdentifier: string = DEFAULT_ENTRY_NAME\n  ): FirebaseService {\n    this.checkDestroyed_();\n\n    if (!this.services_[name]) {\n      this.services_[name] = {};\n    }\n\n    if (!this.services_[name][instanceIdentifier]) {\n      /**\n       * If a custom instance has been defined (i.e. not '[DEFAULT]')\n       * then we will pass that instance on, otherwise we pass `null`\n       */\n      const instanceSpecifier =\n        instanceIdentifier !== DEFAULT_ENTRY_NAME\n          ? instanceIdentifier\n          : undefined;\n      const service = this.firebase_.INTERNAL.factories[name](\n        this,\n        this.extendApp.bind(this),\n        instanceSpecifier\n      );\n      this.services_[name][instanceIdentifier] = service;\n    }\n\n    return this.services_[name][instanceIdentifier];\n  }\n\n  /**\n   * Callback function used to extend an App instance at the time\n   * of service instance creation.\n   */\n  private extendApp(props: { [name: string]: any }): void {\n    // Copy the object onto the FirebaseAppImpl prototype\n    deepExtend(this, props);\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed_(): void {\n    if (this.isDeleted_) {\n      error(AppError.APP_DELETED, { name: this.name_ });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseNamespace,\n  FirebaseAppConfig\n} from '@firebase/app-types';\nimport {\n  _FirebaseApp,\n  _FirebaseNamespace,\n  FirebaseService,\n  FirebaseServiceFactory,\n  FirebaseServiceNamespace,\n  AppHook\n} from '@firebase/app-types/private';\nimport { deepExtend, patchProperty } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { error, AppError } from './errors';\nimport { FirebaseAppLiteImpl } from './lite/firebaseAppLite';\nimport { DEFAULT_ENTRY_NAME } from './constants';\n\nfunction contains(obj: object, key: string) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\n/**\n * Because auth can't share code with other components, we attach the utility functions\n * in an internal namespace to share code.\n * This function return a firebase namespace object without\n * any utility functions, so it can be shared between the regular firebaseNamespace and\n * the lite version.\n */\nexport function createFirebaseNamespaceCore(\n  firebaseAppImpl: typeof FirebaseAppImpl | typeof FirebaseAppLiteImpl\n): FirebaseNamespace {\n  const apps: { [name: string]: FirebaseApp } = {};\n  const factories: { [service: string]: FirebaseServiceFactory } = {};\n  const appHooks: { [service: string]: AppHook } = {};\n\n  // A namespace is a plain JavaScript Object.\n  const namespace: FirebaseNamespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    // @ts-ignore\n    __esModule: true,\n    initializeApp: initializeApp,\n    app: app as any,\n    apps: null as any,\n    Promise: Promise,\n    SDK_VERSION: '${JSCORE_VERSION}',\n    INTERNAL: {\n      registerService,\n      removeApp,\n      factories,\n      useAsService\n    }\n  };\n\n  // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n  patchProperty(namespace, 'default', namespace);\n\n  // firebase.apps is a read-only getter.\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n  });\n\n  /**\n   * Called by App.delete() - but before any services associated with the App\n   * are deleted.\n   */\n  function removeApp(name: string): void {\n    const app = apps[name];\n    callAppHooks(app, 'delete');\n    delete apps[name];\n  }\n\n  /**\n   * Get the App object for a given name (or DEFAULT).\n   */\n  function app(name?: string): FirebaseApp {\n    name = name || DEFAULT_ENTRY_NAME;\n    if (!contains(apps, name)) {\n      error(AppError.NO_APP, { name: name });\n    }\n    return apps[name];\n  }\n\n  patchProperty(app, 'App', firebaseAppImpl);\n  /**\n   * Create a new App instance (name must be unique).\n   */\n  function initializeApp(\n    options: FirebaseOptions,\n    config?: FirebaseAppConfig\n  ): FirebaseApp;\n  function initializeApp(options: FirebaseOptions, name?: string): FirebaseApp;\n  function initializeApp(options: FirebaseOptions, rawConfig = {}) {\n    if (typeof rawConfig !== 'object' || rawConfig === null) {\n      const name = rawConfig;\n      rawConfig = { name };\n    }\n\n    const config = rawConfig as FirebaseAppConfig;\n\n    if (config.name === undefined) {\n      config.name = DEFAULT_ENTRY_NAME;\n    }\n\n    const { name } = config;\n\n    if (typeof name !== 'string' || !name) {\n      error(AppError.BAD_APP_NAME, { name: String(name) });\n    }\n\n    if (contains(apps, name)) {\n      error(AppError.DUPLICATE_APP, { name: name });\n    }\n\n    const app = new firebaseAppImpl(\n      options,\n      config,\n      namespace as _FirebaseNamespace\n    );\n\n    apps[name] = app;\n    callAppHooks(app, 'create');\n\n    return app;\n  }\n\n  /*\n   * Return an array of all the non-deleted FirebaseApps.\n   */\n  function getApps(): FirebaseApp[] {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps).map(name => apps[name]);\n  }\n\n  /*\n   * Register a Firebase Service.\n   *\n   * firebase.INTERNAL.registerService()\n   *\n   * TODO: Implement serviceProperties.\n   */\n  function registerService(\n    name: string,\n    createService: FirebaseServiceFactory,\n    serviceProperties?: { [prop: string]: unknown },\n    appHook?: AppHook,\n    allowMultipleInstances = false\n  ): FirebaseServiceNamespace<FirebaseService> {\n    // Cannot re-register a service that already exists\n    if (factories[name]) {\n      error(AppError.DUPLICATE_SERVICE, { name: name });\n    }\n\n    // Capture the service factory for later service instantiation\n    factories[name] = createService;\n\n    // Capture the appHook, if passed\n    if (appHook) {\n      appHooks[name] = appHook;\n\n      // Run the **new** app hook on all existing apps\n      getApps().forEach(app => {\n        appHook('create', app);\n      });\n    }\n\n    // The Service namespace is an accessor function ...\n    function serviceNamespace(appArg: FirebaseApp = app()) {\n      if (typeof appArg[name] !== 'function') {\n        // Invalid argument.\n        // This happens in the following case: firebase.storage('gs:/')\n        error(AppError.INVALID_APP_ARGUMENT, { name: name });\n      }\n\n      // Forward service instance lookup to the FirebaseApp.\n      return appArg[name]();\n    }\n\n    // ... and a container for service-level properties.\n    if (serviceProperties !== undefined) {\n      deepExtend(serviceNamespace, serviceProperties);\n    }\n\n    // Monkey-patch the serviceNamespace onto the firebase namespace\n    namespace[name] = serviceNamespace;\n\n    // Patch the FirebaseAppImpl prototype\n    firebaseAppImpl.prototype[name] = function(...args) {\n      const serviceFxn = this._getService.bind(this, name);\n      return serviceFxn.apply(this, allowMultipleInstances ? args : []);\n    };\n\n    return serviceNamespace;\n  }\n\n  function callAppHooks(app: FirebaseApp, eventName: string) {\n    for (const serviceName of Object.keys(factories)) {\n      // Ignore virtual services\n      const factoryName = useAsService(app, serviceName);\n      if (factoryName === null) {\n        return;\n      }\n\n      if (appHooks[factoryName]) {\n        appHooks[factoryName](eventName, app);\n      }\n    }\n  }\n\n  // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n  function useAsService(app: FirebaseApp, name: string): string | null {\n    if (name === 'serverAuth') {\n      return null;\n    }\n\n    const useService = name;\n    const options = app.options;\n\n    return useService;\n  }\n\n  return namespace;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createFirebaseNamespaceLite } from './src/lite/firebaseNamespaceLite';\n\nexport const firebase = createFirebaseNamespaceLite();\n\nexport default firebase;\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from '@firebase/app-types';\nimport {\n  _FirebaseApp,\n  _FirebaseNamespace,\n  FirebaseServiceFactory,\n  AppHook\n} from '@firebase/app-types/private';\nimport { FirebaseAppLiteImpl } from './firebaseAppLite';\nimport { createFirebaseNamespaceCore } from '../firebaseNamespaceCore';\n\nexport function createFirebaseNamespaceLite(): FirebaseNamespace {\n  const namespace = createFirebaseNamespaceCore(FirebaseAppLiteImpl);\n\n  namespace.SDK_VERSION = '${JSCORE_VERSION}_LITE';\n\n  const registerService = (namespace as _FirebaseNamespace).INTERNAL\n    .registerService;\n  (namespace as _FirebaseNamespace).INTERNAL.registerService = registerServiceForLite;\n\n  /**\n   * This is a special implementation, so it only works with performance.\n   * only allow performance SDK to register.\n   */\n  function registerServiceForLite(\n    name: string,\n    createService: FirebaseServiceFactory,\n    serviceProperties?: { [prop: string]: any },\n    appHook?: AppHook,\n    allowMultipleInstances?: boolean\n  ) {\n    // only allow performance to register with firebase lite\n    if (name !== 'performance' && name !== 'installations') {\n      throw Error(`${name} cannot register with the standalone perf instance`);\n    }\n\n    return registerService(\n      name,\n      createService,\n      serviceProperties,\n      appHook,\n      allowMultipleInstances\n    );\n  }\n\n  return namespace;\n}\n","function toArray(arr) {\n  return Array.prototype.slice.call(arr);\n}\n\nfunction promisifyRequest(request) {\n  return new Promise(function(resolve, reject) {\n    request.onsuccess = function() {\n      resolve(request.result);\n    };\n\n    request.onerror = function() {\n      reject(request.error);\n    };\n  });\n}\n\nfunction promisifyRequestCall(obj, method, args) {\n  var request;\n  var p = new Promise(function(resolve, reject) {\n    request = obj[method].apply(obj, args);\n    promisifyRequest(request).then(resolve, reject);\n  });\n\n  p.request = request;\n  return p;\n}\n\nfunction promisifyCursorRequestCall(obj, method, args) {\n  var p = promisifyRequestCall(obj, method, args);\n  return p.then(function(value) {\n    if (!value) return;\n    return new Cursor(value, p.request);\n  });\n}\n\nfunction proxyProperties(ProxyClass, targetProp, properties) {\n  properties.forEach(function(prop) {\n    Object.defineProperty(ProxyClass.prototype, prop, {\n      get: function() {\n        return this[targetProp][prop];\n      },\n      set: function(val) {\n        this[targetProp][prop] = val;\n      }\n    });\n  });\n}\n\nfunction proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\n\nfunction proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return this[targetProp][prop].apply(this[targetProp], arguments);\n    };\n  });\n}\n\nfunction proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\n\nfunction Index(index) {\n  this._index = index;\n}\n\nproxyProperties(Index, '_index', [\n  'name',\n  'keyPath',\n  'multiEntry',\n  'unique'\n]);\n\nproxyRequestMethods(Index, '_index', IDBIndex, [\n  'get',\n  'getKey',\n  'getAll',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(Index, '_index', IDBIndex, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nfunction Cursor(cursor, request) {\n  this._cursor = cursor;\n  this._request = request;\n}\n\nproxyProperties(Cursor, '_cursor', [\n  'direction',\n  'key',\n  'primaryKey',\n  'value'\n]);\n\nproxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n  'update',\n  'delete'\n]);\n\n// proxy 'next' methods\n['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n  if (!(methodName in IDBCursor.prototype)) return;\n  Cursor.prototype[methodName] = function() {\n    var cursor = this;\n    var args = arguments;\n    return Promise.resolve().then(function() {\n      cursor._cursor[methodName].apply(cursor._cursor, args);\n      return promisifyRequest(cursor._request).then(function(value) {\n        if (!value) return;\n        return new Cursor(value, cursor._request);\n      });\n    });\n  };\n});\n\nfunction ObjectStore(store) {\n  this._store = store;\n}\n\nObjectStore.prototype.createIndex = function() {\n  return new Index(this._store.createIndex.apply(this._store, arguments));\n};\n\nObjectStore.prototype.index = function() {\n  return new Index(this._store.index.apply(this._store, arguments));\n};\n\nproxyProperties(ObjectStore, '_store', [\n  'name',\n  'keyPath',\n  'indexNames',\n  'autoIncrement'\n]);\n\nproxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'put',\n  'add',\n  'delete',\n  'clear',\n  'get',\n  'getAll',\n  'getKey',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nproxyMethods(ObjectStore, '_store', IDBObjectStore, [\n  'deleteIndex'\n]);\n\nfunction Transaction(idbTransaction) {\n  this._tx = idbTransaction;\n  this.complete = new Promise(function(resolve, reject) {\n    idbTransaction.oncomplete = function() {\n      resolve();\n    };\n    idbTransaction.onerror = function() {\n      reject(idbTransaction.error);\n    };\n    idbTransaction.onabort = function() {\n      reject(idbTransaction.error);\n    };\n  });\n}\n\nTransaction.prototype.objectStore = function() {\n  return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n};\n\nproxyProperties(Transaction, '_tx', [\n  'objectStoreNames',\n  'mode'\n]);\n\nproxyMethods(Transaction, '_tx', IDBTransaction, [\n  'abort'\n]);\n\nfunction UpgradeDB(db, oldVersion, transaction) {\n  this._db = db;\n  this.oldVersion = oldVersion;\n  this.transaction = new Transaction(transaction);\n}\n\nUpgradeDB.prototype.createObjectStore = function() {\n  return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n};\n\nproxyProperties(UpgradeDB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(UpgradeDB, '_db', IDBDatabase, [\n  'deleteObjectStore',\n  'close'\n]);\n\nfunction DB(db) {\n  this._db = db;\n}\n\nDB.prototype.transaction = function() {\n  return new Transaction(this._db.transaction.apply(this._db, arguments));\n};\n\nproxyProperties(DB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(DB, '_db', IDBDatabase, [\n  'close'\n]);\n\n// Add cursor iterators\n// TODO: remove this once browsers do the right thing with promises\n['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n  [ObjectStore, Index].forEach(function(Constructor) {\n    // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n    if (!(funcName in Constructor.prototype)) return;\n\n    Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n      var args = toArray(arguments);\n      var callback = args[args.length - 1];\n      var nativeObject = this._store || this._index;\n      var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n      request.onsuccess = function() {\n        callback(request.result);\n      };\n    };\n  });\n});\n\n// polyfill getAll\n[Index, ObjectStore].forEach(function(Constructor) {\n  if (Constructor.prototype.getAll) return;\n  Constructor.prototype.getAll = function(query, count) {\n    var instance = this;\n    var items = [];\n\n    return new Promise(function(resolve) {\n      instance.iterateCursor(query, function(cursor) {\n        if (!cursor) {\n          resolve(items);\n          return;\n        }\n        items.push(cursor.value);\n\n        if (count !== undefined && items.length == count) {\n          resolve(items);\n          return;\n        }\n        cursor.continue();\n      });\n    });\n  };\n});\n\nexport function openDb(name, version, upgradeCallback) {\n  var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n  var request = p.request;\n\n  if (request) {\n    request.onupgradeneeded = function(event) {\n      if (upgradeCallback) {\n        upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n      }\n    };\n  }\n\n  return p.then(function(db) {\n    return new DB(db);\n  });\n}\n\nexport function deleteDb(name) {\n  return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = 'w:__VERSION__'; // Will be replaced by Rollup\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  CREATE_INSTALLATION_FAILED = 'create-installation-failed',\n  GENERATE_TOKEN_FAILED = 'generate-token-failed',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: 'Missing App configuration values.',\n  [ErrorCode.CREATE_INSTALLATION_FAILED]:\n    'Could not register Firebase Installation.',\n  [ErrorCode.GENERATE_TOKEN_FAILED]: 'Could not generate Auth Token.',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n};\n\nexport const ERROR_FACTORY = new ErrorFactory(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n}\n\nexport type ServerError = FirebaseError & ServerErrorData;\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { AppConfig } from '../interfaces/app-config';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES);\n  }\n\n  const appName = app.name;\n  const { projectId, apiKey, appId } = app.options;\n\n  if (!appName || !projectId || !apiKey || !appId) {\n    throw ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES);\n  }\n\n  return { appName, projectId, apiKey, appId };\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorData {\n  code: number;\n  message: string;\n  status: string;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(\n  buffer: ArrayBuffer | Uint8Array\n): string {\n  const array = buffer instanceof Uint8Array ? buffer : new Uint8Array(buffer);\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\n/** Generates a new FID using random values from Web Crypto API. */\nexport function generateFid(): string {\n  // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n  // bytes. our implementation generates a 17 byte array instead.\n  const fidByteArray = new Uint8Array(17);\n  crypto.getRandomValues(fidByteArray);\n\n  // Replace the first 4 random bits with the constant FID header of 0b0111.\n  fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n  return encode(fidByteArray);\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, openDb } from 'idb';\nimport { AppConfig } from '../interfaces/app-config';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\nconst dbPromise: Promise<DB> = openDb(\n  DATABASE_NAME,\n  DATABASE_VERSION,\n  upgradeDB => {\n    // We don't use 'break' in this switch statement, the fall-through\n    // behavior is what we want, because if there are multiple versions between\n    // the old version and the current version, we want ALL the migrations\n    // that correspond to those versions to run, not only the last one.\n    switch (upgradeDB.oldVersion) {\n      case 0:\n        upgradeDB.createObjectStore(OBJECT_STORE_NAME);\n    }\n  }\n);\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get<ReturnType>(\n  appConfig: AppConfig\n): Promise<ReturnType | undefined> {\n  const key = getKey(appConfig);\n  const db = await dbPromise;\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await dbPromise;\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  tx.objectStore(OBJECT_STORE_NAME).put(value, key);\n  await tx.complete;\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await dbPromise;\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  return tx.complete;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<OldType, NewType>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: OldType | undefined) => NewType\n): Promise<NewType> {\n  const key = getKey(appConfig);\n  const db = await dbPromise;\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = await store.get(key);\n  const newValue = updateFn(oldValue);\n\n  if (newValue === oldValue) {\n    return newValue;\n  }\n\n  if (newValue === undefined) {\n    store.delete(key);\n  } else {\n    store.put(newValue, key);\n  }\n\n  await tx.complete;\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await dbPromise;\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  tx.objectStore(OBJECT_STORE_NAME).clear();\n  return tx.complete;\n}\n\nfunction getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: any[]\n) => void;\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args) => {\n  if (logType < instance.logLevel) return;\n  const now = new Date().toISOString();\n  switch (logType) {\n    /**\n     * By default, `console.debug` is not displayed in the developer console (in\n     * chrome). To avoid forcing users to have to opt-in to these logs twice\n     * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n     * logs to the `console.log` function.\n     */\n    case LogLevel.DEBUG:\n      console.log(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.VERBOSE:\n      console.log(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.INFO:\n      console.info(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.WARN:\n      console.warn(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.ERROR:\n      console.error(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    default:\n      throw new Error(\n        `Attempted to log a message with an invalid logType (value: ${logType})`\n      );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError('Invalid value assigned to `logLevel`');\n    }\n    this._logLevel = val;\n  }\n\n  /**\n   * The log handler for the Logger instance.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args) {\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args) {\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args) {\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args) {\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args) {\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallation } from '../api/create-installation';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  registrationPromise?: Promise<void>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  appConfig: AppConfig\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<void> | undefined;\n\n  return {\n    installationEntry: await update(\n      appConfig,\n      (oldEntry?: InstallationEntry): InstallationEntry => {\n        const installationEntry = updateOrCreateFid(oldEntry);\n        const entryWithPromise = triggerRegistrationIfNecessary(\n          appConfig,\n          installationEntry\n        );\n        registrationPromise = entryWithPromise.registrationPromise;\n        return entryWithPromise.installationEntry;\n      }\n    ),\n    registrationPromise\n  };\n}\n\nfunction updateOrCreateFid(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the registration\n * and return an InProgressInstallationEntry.\n */\nfunction triggerRegistrationIfNecessary(\n  appConfig: AppConfig,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      appConfig,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(appConfig)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  appConfig: AppConfig,\n  installationEntry: InProgressInstallationEntry\n): Promise<void> {\n  try {\n    const registeredInstallationEntry = await createInstallation(\n      appConfig,\n      installationEntry\n    );\n    await set(appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending. */\nasync function waitUntilFidRegistration(appConfig: AppConfig): Promise<void> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(appConfig);\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    throw ERROR_FACTORY.create(ErrorCode.CREATE_INSTALLATION_FAILED);\n  }\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(\n    appConfig,\n    (oldEntry?: InstallationEntry): InstallationEntry => {\n      if (!oldEntry) {\n        throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n      }\n\n      if (hasInstallationRequestTimedOut(oldEntry)) {\n        return {\n          fid: oldEntry.fid,\n          registrationStatus: RequestStatus.NOT_STARTED\n        };\n      }\n\n      return oldEntry;\n    }\n  );\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint\n} from './common';\n\nexport async function createInstallation(\n  appConfig: AppConfig,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await fetch(endpoint, request);\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint\n} from './common';\n\nexport async function generateAuthToken(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await fetch(endpoint, request);\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken = extractAuthTokenInfoFromResponse(\n      responseValue\n    );\n    return completedAuthToken;\n  } else {\n    throw getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { generateAuthToken } from '../api/generate-auth-token';\nimport { extractAppConfig } from '../helpers/extract-app-config';\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { remove, set, update } from '../helpers/idb-manager';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\n\nexport async function getToken(app: FirebaseApp): Promise<string> {\n  const appConfig = extractAppConfig(app);\n\n  await completeInstallationRegistration(appConfig);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  return fetchAuthToken(appConfig);\n}\n\nasync function completeInstallationRegistration(\n  appConfig: AppConfig\n): Promise<void> {\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    appConfig\n  );\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  } else if (installationEntry.registrationStatus !== RequestStatus.COMPLETED) {\n    // Installation ID can't be registered.\n    throw ERROR_FACTORY.create(ErrorCode.CREATE_INSTALLATION_FAILED);\n  }\n}\n\nasync function fetchAuthToken(appConfig: AppConfig): Promise<string> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(\n    appConfig,\n    (oldEntry?: InstallationEntry): RegisteredInstallationEntry => {\n      if (!isEntryRegistered(oldEntry)) {\n        throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n      }\n\n      const oldAuthToken = oldEntry.authToken;\n      if (isAuthTokenValid(oldAuthToken)) {\n        // There is a valid token in the DB.\n        return oldEntry;\n      } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n        // There already is a token request in progress.\n        tokenPromise = waitUntilAuthTokenRequest(appConfig);\n        return oldEntry;\n      } else {\n        // No token or token expired.\n        if (!navigator.onLine) {\n          throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n        }\n\n        const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n        tokenPromise = fetchAuthTokenFromServer(appConfig, inProgressEntry);\n        return inProgressEntry;\n      }\n    }\n  );\n\n  const authToken: CompletedAuthToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken.token;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n */\nasync function waitUntilAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    throw ERROR_FACTORY.create(ErrorCode.GENERATE_TOKEN_FAILED);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(\n    appConfig,\n    (oldEntry?: InstallationEntry): RegisteredInstallationEntry => {\n      if (!isEntryRegistered(oldEntry)) {\n        throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n      }\n\n      const oldAuthToken = oldEntry.authToken;\n      if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n        return {\n          ...oldEntry,\n          authToken: { requestStatus: RequestStatus.NOT_STARTED }\n        };\n      }\n\n      return oldEntry;\n    }\n  );\n}\n\nasync function fetchAuthTokenFromServer(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthToken(appConfig, installationEntry);\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (isServerError(e) && (e.serverCode === 401 || e.serverCode === 404)) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { RegisteredInstallationEntry } from '../interfaces/installation-entry';\nimport {\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint\n} from './common';\n\nexport async function deleteInstallation(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<void> {\n  const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const request: RequestInit = {\n    method: 'DELETE',\n    headers\n  };\n\n  const response = await fetch(endpoint, request);\n  if (!response.ok) {\n    throw getErrorFromResponse('Delete Installation', response);\n  }\n}\n\nfunction getDeleteEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport {\n  _FirebaseNamespace,\n  FirebaseServiceFactory\n} from '@firebase/app-types/private';\nimport { FirebaseInstallations } from '@firebase/installations-types';\n\nimport { deleteInstallation, getId, getToken } from './functions';\nimport { extractAppConfig } from './helpers/extract-app-config';\n\nexport function registerInstallations(instance: _FirebaseNamespace): void {\n  const installationsName = 'installations';\n\n  const factoryMethod: FirebaseServiceFactory = app => {\n    // Throws if app isn't configured properly.\n    extractAppConfig(app);\n\n    return {\n      app,\n      getId: () => getId(app),\n      getToken: () => getToken(app),\n      delete: () => deleteInstallation(app)\n    };\n  };\n\n  instance.INTERNAL.registerService(installationsName, factoryMethod);\n}\n\nregisterInstallations(firebase as _FirebaseNamespace);\n\n/**\n * Define extension behavior of `registerInstallations`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    installations(app?: FirebaseApp): FirebaseInstallations;\n  }\n  interface FirebaseApp {\n    installations(): FirebaseInstallations;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { extractAppConfig } from '../helpers/extract-app-config';\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\n\nexport async function getId(app: FirebaseApp): Promise<string> {\n  const appConfig = extractAppConfig(app);\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    appConfig\n  );\n  if (registrationPromise) {\n    // Suppress registration errors as they are not a problem for getId.\n    registrationPromise.catch(() => {});\n  }\n  return installationEntry.fid;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { deleteInstallation as deleteInstallationRequest } from '../api/delete-installation';\nimport { extractAppConfig } from '../helpers/extract-app-config';\nimport { remove, update } from '../helpers/idb-manager';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport async function deleteInstallation(app: FirebaseApp): Promise<void> {\n  const appConfig = extractAppConfig(app);\n\n  const entry = await update(\n    appConfig,\n    (\n      oldEntry?: InstallationEntry\n    ):\n      | InProgressInstallationEntry\n      | RegisteredInstallationEntry\n      | undefined => {\n      if (\n        oldEntry &&\n        oldEntry.registrationStatus === RequestStatus.NOT_STARTED\n      ) {\n        // Delete the unregistered entry without sending a deleteInstallation request.\n        return undefined;\n      }\n      return oldEntry;\n    }\n  );\n\n  if (entry) {\n    if (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n      // Can't delete while trying to register.\n      throw ERROR_FACTORY.create(ErrorCode.DELETE_PENDING_REGISTRATION);\n    } else if (entry.registrationStatus === RequestStatus.COMPLETED) {\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      } else {\n        await deleteInstallationRequest(appConfig, entry);\n        await remove(appConfig);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\n\ndeclare global {\n  interface Window {\n    PerformanceObserver: typeof PerformanceObserver;\n    perfMetrics?: { onFirstInputDelay: Function };\n  }\n}\n\nlet apiInstance: Api | undefined;\nlet windowInstance: Window | undefined;\n\nexport type EntryType =\n  | 'mark'\n  | 'measure'\n  | 'paint'\n  | 'resource'\n  | 'frame'\n  | 'navigation';\n\n/**\n * This class holds a reference to various browser related objects injected by set methods.\n */\nexport class Api {\n  private performance: Performance;\n  /** PreformanceObserver constructor function. */\n  private PerformanceObserver: typeof PerformanceObserver;\n  private windowLocation: Location;\n  onFirstInputDelay?: Function;\n  localStorage: Storage;\n  document: Document;\n  navigator: Navigator;\n\n  constructor(window?: Window) {\n    if (!window) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_WINDOW);\n    }\n    this.performance = window.performance;\n    this.PerformanceObserver = window.PerformanceObserver;\n    this.windowLocation = window.location;\n    this.navigator = window.navigator;\n    this.document = window.document;\n    this.localStorage = window.localStorage;\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\n    }\n  }\n\n  getUrl(): string {\n    // Do not capture the string query part of url.\n    return this.windowLocation.href.split('?')[0];\n  }\n\n  mark(name: string): void {\n    if (!this.performance || !this.performance.mark) return;\n    this.performance.mark(name);\n  }\n\n  measure(measureName: string, mark1: string, mark2: string): void {\n    if (!this.performance || !this.performance.measure) return;\n    this.performance.measure(measureName, mark1, mark2);\n  }\n\n  getEntriesByType(type: EntryType): PerformanceEntry[] {\n    if (!this.performance || !this.performance.getEntriesByType) return [];\n    return this.performance.getEntriesByType(type);\n  }\n\n  getEntriesByName(name: string): PerformanceEntry[] {\n    if (!this.performance || !this.performance.getEntriesByName) return [];\n    return this.performance.getEntriesByName(name);\n  }\n\n  getTimeOrigin(): number {\n    // Polyfill the time origin with performance.timing.navigationStart.\n    return (\n      this.performance &&\n      (this.performance.timeOrigin || this.performance.timing.navigationStart)\n    );\n  }\n\n  setupObserver(\n    entryType: EntryType,\n    callback: (entry: PerformanceEntry) => void\n  ): void {\n    if (!this.PerformanceObserver) return;\n    const observer = new this.PerformanceObserver(list => {\n      for (const entry of list.getEntries()) {\n        // `entry` is a PerformanceEntry instance.\n        callback(entry);\n      }\n    });\n\n    // Start observing the entry types you care about.\n    observer.observe({ entryTypes: [entryType] });\n  }\n\n  static getInstance(): Api {\n    if (apiInstance === undefined) {\n      apiInstance = new Api(windowInstance);\n    }\n    return apiInstance;\n  }\n}\n\nexport function setupApi(window: Window): void {\n  windowInstance = window;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\n\nlet settingsServiceInstance: SettingsService | undefined;\n\nexport class SettingsService {\n  // The variable which controls logging of automatic traces and HTTP/S network monitoring.\n  instrumentationEnabled = true;\n\n  // The variable which controls logging of custom traces.\n  dataCollectionEnabled = true;\n\n  // Configuration flags set through remote config.\n  loggingEnabled = false;\n  // Sampling rate between 0 and 1.\n  tracesSamplingRate = 1;\n  networkRequestsSamplingRate = 1;\n  // Address of logging service.\n  logEndPointUrl =\n    'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\n  logSource = 462;\n\n  // Flags which control per session logging of traces and network requests.\n  logTraceAfterSampling = false;\n  logNetworkAfterSampling = false;\n\n  // TTL of config retrieved from remote config in hours.\n  configTimeToLive = 12;\n\n  firebaseAppInstance!: FirebaseApp;\n\n  getAppId(): string {\n    const appId =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.appId;\n    if (!appId) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_APP_ID);\n    }\n    return appId;\n  }\n\n  getProjectId(): string {\n    const projectId =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.projectId;\n    if (!projectId) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_PROJECT_ID);\n    }\n    return projectId;\n  }\n\n  getApiKey(): string {\n    const apiKey =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.apiKey;\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_API_KEY);\n    }\n    return apiKey;\n  }\n\n  static getInstance(): SettingsService {\n    if (settingsServiceInstance === undefined) {\n      settingsServiceInstance = new SettingsService();\n    }\n    return settingsServiceInstance;\n  }\n}\n","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const SDK_VERSION = '<PERF_SDK_VERSION>';\n/** The prefix for start User Timing marks used for creating Traces. */\nexport const TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\n/** The prefix for stop User Timing marks used for creating Traces. */\nexport const TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\n/** The prefix for User Timing measure used for creating Traces. */\nexport const TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\n/** The prefix for out of the box page load Trace name. */\nexport const OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\n\nexport const FIRST_PAINT_COUNTER_NAME = '_fp';\n\nexport const FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\n\nexport const FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\n\nexport const CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\n\nexport const CONFIG_EXPIRY_LOCAL_STORAGE_KEY =\n  '@firebase/performance/configexpire';\n\nexport const SERVICE = 'performance';\nexport const SERVICE_NAME = 'Performance';\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from '../constants';\n\nexport const enum ErrorCode {\n  TRACE_STARTED_BEFORE = 'trace started',\n  TRACE_STOPPED_BEFORE = 'trace stopped',\n  NO_WINDOW = 'no window',\n  NO_APP_ID = 'no app id',\n  NO_PROJECT_ID = 'no project id',\n  NO_API_KEY = 'no api key',\n  INVALID_CC_LOG = 'invalid cc log',\n  FB_NOT_DEFAULT = 'FB not default',\n  RC_NOT_OK = 'RC response not ok'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.TRACE_STARTED_BEFORE]: 'Trace {$traceName} was started before.',\n  [ErrorCode.TRACE_STOPPED_BEFORE]: 'Trace {$traceName} is not running.',\n  [ErrorCode.NO_WINDOW]: 'Window is not available.',\n  [ErrorCode.NO_APP_ID]: 'App id is not available.',\n  [ErrorCode.NO_PROJECT_ID]: 'Project id is not available.',\n  [ErrorCode.NO_API_KEY]: 'Api key is not available.',\n  [ErrorCode.INVALID_CC_LOG]: 'Attempted to queue invalid cc event',\n  [ErrorCode.FB_NOT_DEFAULT]:\n    'Performance can only start when Firebase app instance is the default one.',\n  [ErrorCode.RC_NOT_OK]: 'RC response is not ok'\n};\n\nexport const ERROR_FACTORY = new ErrorFactory(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport '@firebase/installations';\nimport { SettingsService } from './settings_service';\n\nlet iid: string | undefined;\nlet authToken: string | undefined;\n\nexport function getIidPromise(): Promise<string> {\n  const iidPromise = SettingsService.getInstance()\n    .firebaseAppInstance.installations()\n    .getId();\n\n  iidPromise.then((iidVal: string) => {\n    iid = iidVal;\n  });\n  return iidPromise;\n}\n\n// This method should be used after the iid is retrieved by getIidPromise method.\nexport function getIid(): string | undefined {\n  return iid;\n}\n\nexport function getAuthTokenPromise(): Promise<string> {\n  const authTokenPromise = SettingsService.getInstance()\n    .firebaseAppInstance.installations()\n    .getToken();\n  authTokenPromise.then((authTokenVal: string) => {\n    authToken = authTokenVal;\n  });\n  return authTokenPromise;\n}\n\nexport function getAuthenticationToken(): string | undefined {\n  return authToken;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Api } from '../services/api_service';\n\n// The values and orders of the following enums should not be changed.\nconst enum ServiceWorkerStatus {\n  UNKNOWN = 0,\n  UNSUPPORTED = 1,\n  CONTROLLED = 2,\n  UNCONTROLLED = 3\n}\n\nexport enum VisibilityState {\n  UNKNOWN = 0,\n  VISIBLE = 1,\n  HIDDEN = 2,\n  PRERENDER = 3,\n  UNLOADED = 4\n}\n\nconst enum EffectiveConnectionType {\n  UNKNOWN = 0,\n  CONNECTION_SLOW_2G = 1,\n  CONNECTION_2G = 2,\n  CONNECTION_3G = 3,\n  CONNECTION_4G = 4\n}\n\nexport function getServiceWorkerStatus(): ServiceWorkerStatus {\n  const navigator = Api.getInstance().navigator;\n  if ('serviceWorker' in navigator) {\n    if (navigator.serviceWorker.controller) {\n      return ServiceWorkerStatus.CONTROLLED;\n    } else {\n      return ServiceWorkerStatus.UNCONTROLLED;\n    }\n  } else {\n    return ServiceWorkerStatus.UNSUPPORTED;\n  }\n}\n\nexport function getVisibilityState(): VisibilityState {\n  const document = Api.getInstance().document;\n  const visibilityState = document.visibilityState;\n  switch (visibilityState) {\n    case 'visible':\n      return VisibilityState.VISIBLE;\n    case 'hidden':\n      return VisibilityState.HIDDEN;\n    case 'prerender':\n      return VisibilityState.PRERENDER;\n    default:\n      return VisibilityState.UNKNOWN;\n  }\n}\n\nexport function getEffectiveConnectionType(): EffectiveConnectionType {\n  const navigator = Api.getInstance().navigator;\n  const navigatorConnection = (navigator as any).connection;\n  const effectiveType =\n    navigatorConnection && navigatorConnection.effectiveType;\n  switch (effectiveType) {\n    case 'slow-2g':\n      return EffectiveConnectionType.CONNECTION_SLOW_2G;\n    case '2g':\n      return EffectiveConnectionType.CONNECTION_2G;\n    case '3g':\n      return EffectiveConnectionType.CONNECTION_3G;\n    case '4g':\n      return EffectiveConnectionType.CONNECTION_4G;\n    default:\n      return EffectiveConnectionType.UNKNOWN;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { SERVICE_NAME } from '../constants';\n\nexport const consoleLogger = new Logger(SERVICE_NAME);\nconsoleLogger.logLevel = LogLevel.INFO;\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SettingsService } from './settings_service';\nimport {\n  SDK_VERSION,\n  CONFIG_LOCAL_STORAGE_KEY,\n  CONFIG_EXPIRY_LOCAL_STORAGE_KEY\n} from '../constants';\nimport { Api } from './api_service';\nimport { getAuthTokenPromise } from './iid_service';\nimport { consoleLogger } from '../utils/console_logger';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\n\nconst REMOTE_CONFIG_SDK_VERSION = '0.0.1';\n\ninterface SecondaryConfig {\n  loggingEnabled?: boolean;\n  logEndPointUrl?: string;\n  logSource?: number;\n  tracesSamplingRate?: number;\n  networkRequestsSamplingRate?: number;\n}\n\n// These values will be used if the remote config object is successfully\n// retrieved, but the template does not have these fields.\nconst SECONDARY_CONFIGS: SecondaryConfig = {\n  loggingEnabled: true\n};\n\ninterface RemoteConfigTemplate {\n  fpr_enabled?: string;\n  fpr_log_source?: string;\n  fpr_log_endpoint_url?: string;\n  fpr_vc_network_request_sampling_rate?: string;\n  fpr_vc_trace_sampling_rate?: string;\n  fpr_vc_session_sampling_rate?: string;\n}\n\ninterface RemoteConfigResponse {\n  entries?: RemoteConfigTemplate;\n  state?: string;\n}\n\nconst FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\n\nexport function getConfig(iid: string): Promise<void> {\n  const config = getStoredConfig();\n  if (config) {\n    processConfig(config);\n    return Promise.resolve();\n  }\n\n  return getRemoteConfig(iid)\n    .then(config => processConfig(config))\n    .then(\n      config => storeConfig(config),\n      /** Do nothing for error, use defaults set in settings service. */ () => {}\n    );\n}\n\nfunction getStoredConfig(): RemoteConfigResponse | undefined {\n  const localStorage = Api.getInstance().localStorage;\n  const expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\n  if (!expiryString || !configValid(expiryString)) return;\n\n  const configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\n  if (!configStringified) return;\n  try {\n    const configResponse: RemoteConfigResponse = JSON.parse(configStringified);\n    return configResponse;\n  } catch {\n    return;\n  }\n}\n\nfunction storeConfig(config: RemoteConfigResponse | undefined): void {\n  if (!config) return;\n  const localStorage = Api.getInstance().localStorage;\n  localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\n  localStorage.setItem(\n    CONFIG_EXPIRY_LOCAL_STORAGE_KEY,\n    String(\n      Date.now() +\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000\n    )\n  );\n}\n\nconst COULD_NOT_GET_CONFIG_MSG =\n  'Could not fetch config, will use default configs';\n\nfunction getRemoteConfig(\n  iid: string\n): Promise<RemoteConfigResponse | undefined> {\n  // Perf needs auth token only to retrieve remote config.\n  return getAuthTokenPromise()\n    .then(authToken => {\n      const projectId = SettingsService.getInstance().getProjectId();\n      const configEndPoint = `https://firebaseremoteconfig.googleapis.com/v1/projects/${projectId}/namespaces/fireperf:fetch?key=${SettingsService.getInstance().getApiKey()}`;\n      const request = new Request(configEndPoint, {\n        method: 'POST',\n        headers: {\n          Authorization: `${FIS_AUTH_PREFIX} ${authToken}`\n        },\n        body: JSON.stringify({\n          app_instance_id: iid,\n          app_instance_id_token: authToken,\n          app_id: SettingsService.getInstance().getAppId(),\n          app_version: SDK_VERSION,\n          sdk_version: REMOTE_CONFIG_SDK_VERSION\n        })\n      });\n      return fetch(request).then(response => {\n        if (response.ok) {\n          return response.json() as RemoteConfigResponse;\n        }\n        // In case response is not ok. This will be caught by catch.\n        throw ERROR_FACTORY.create(ErrorCode.RC_NOT_OK);\n      });\n    })\n    .catch(() => {\n      consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\n      return undefined;\n    });\n}\n\n/**\n * Processes config coming either from calling RC or from local storage.\n * This method only runs if call is successful or config in storage\n * is valie.\n */\nfunction processConfig(\n  config: RemoteConfigResponse | undefined\n): RemoteConfigResponse | undefined {\n  if (!config) return config;\n  const settingsServiceInstance = SettingsService.getInstance();\n  const entries = config.entries || {};\n  if (entries.fpr_enabled !== undefined) {\n    // TODO: Change the assignment of loggingEnabled once the received type is known.\n    settingsServiceInstance.loggingEnabled =\n      String(entries.fpr_enabled) === 'true';\n  } else if (SECONDARY_CONFIGS.loggingEnabled !== undefined) {\n    // Config retrieved successfully, but there is no fpr_enabled in template.\n    // Use secondary configs value.\n    settingsServiceInstance.loggingEnabled = SECONDARY_CONFIGS.loggingEnabled;\n  }\n  if (entries.fpr_log_source) {\n    settingsServiceInstance.logSource = Number(entries.fpr_log_source);\n  } else if (SECONDARY_CONFIGS.logSource) {\n    settingsServiceInstance.logSource = SECONDARY_CONFIGS.logSource;\n  }\n  if (entries.fpr_log_endpoint_url) {\n    settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\n  } else if (SECONDARY_CONFIGS.logEndPointUrl) {\n    settingsServiceInstance.logEndPointUrl = SECONDARY_CONFIGS.logEndPointUrl;\n  }\n  if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate = Number(\n      entries.fpr_vc_network_request_sampling_rate\n    );\n  } else if (SECONDARY_CONFIGS.networkRequestsSamplingRate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate =\n      SECONDARY_CONFIGS.networkRequestsSamplingRate;\n  }\n  if (entries.fpr_vc_trace_sampling_rate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate = Number(\n      entries.fpr_vc_trace_sampling_rate\n    );\n  } else if (SECONDARY_CONFIGS.tracesSamplingRate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate =\n      SECONDARY_CONFIGS.tracesSamplingRate;\n  }\n  // Set the per session trace and network logging flags.\n  settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(\n    settingsServiceInstance.tracesSamplingRate\n  );\n  settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(\n    settingsServiceInstance.networkRequestsSamplingRate\n  );\n  return config;\n}\n\nfunction configValid(expiry: string): boolean {\n  return Number(expiry) > Date.now();\n}\n\nfunction shouldLogAfterSampling(samplingRate: number): boolean {\n  return Math.random() <= samplingRate;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getIidPromise } from './iid_service';\nimport { getConfig } from './remote_config_service';\nimport { Api } from './api_service';\n\nconst enum InitializationStatus {\n  notInitialized = 1,\n  initializationPending,\n  initialized\n}\n\nlet initializationStatus = InitializationStatus.notInitialized;\n\nlet initializationPromise: Promise<void> | undefined;\n\nexport function getInitializationPromise(): Promise<void> {\n  initializationStatus = InitializationStatus.initializationPending;\n\n  initializationPromise = initializationPromise || initializePerf();\n\n  return initializationPromise;\n}\n\nexport function isPerfInitialized(): boolean {\n  return initializationStatus === InitializationStatus.initialized;\n}\n\nfunction initializePerf(): Promise<void> {\n  return getDocumentReadyComplete()\n    .then(() => getIidPromise())\n    .then(iid => getConfig(iid))\n    .then(\n      () => changeInitializationStatus(),\n      () => changeInitializationStatus()\n    );\n}\n\n/**\n * Returns a promise which resolves whenever the document readystate is complete or\n * immediately if it is called after page load complete.\n */\nfunction getDocumentReadyComplete(): Promise<void> {\n  const document = Api.getInstance().document;\n  return new Promise(resolve => {\n    if (document && document.readyState !== 'complete') {\n      const handler = () => {\n        if (document.readyState === 'complete') {\n          document.removeEventListener('readystatechange', handler);\n          resolve();\n        }\n      };\n      document.addEventListener('readystatechange', handler);\n    } else {\n      resolve();\n    }\n  });\n}\n\nfunction changeInitializationStatus(): void {\n  initializationStatus = InitializationStatus.initialized;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogHandler, Logger, LogLevel } from '@firebase/logger';\nimport { SettingsService } from './settings_service';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport { consoleLogger } from '../utils/console_logger';\n\nconst DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\nconst INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\n// If end point does not work, the call will be tried for these many times.\nconst DEFAULT_REMAINING_TRIES = 3;\nlet remainingTries = DEFAULT_REMAINING_TRIES;\n\ninterface BatchEvent {\n  message: string;\n  eventTime: number;\n}\n\n// CC accepted log format.\ninterface CcBatchLogFormat {\n  request_time_ms: string;\n  client_info: ClientInfo;\n  log_source: number;\n  log_event: Log[];\n}\n\ninterface ClientInfo {\n  client_type: number;\n  js_client_info: {};\n}\n\ninterface Log {\n  source_extension_json: string;\n  event_time_ms: string;\n}\n\nlet queue: BatchEvent[] = [];\n\nfunction processQueue(timeOffset: number): void {\n  setTimeout(() => {\n    // If there is no remainingTries left, stop retrying.\n    if (remainingTries === 0) {\n      return;\n    }\n\n    // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\n    if (!queue.length) {\n      return processQueue(DEFAULT_SEND_INTERVAL_MS);\n    }\n\n    // Capture a snapshot of the queue and empty the \"official queue\".\n    const staged = [...queue];\n    queue = [];\n\n    // We will pass the JSON serialized event to the backend.\n    const log_event = staged.map(evt => ({\n      source_extension_json: evt.message,\n      event_time_ms: String(evt.eventTime)\n    }));\n\n    const data: CcBatchLogFormat = {\n      request_time_ms: String(Date.now()),\n      client_info: {\n        client_type: 1, // 1 is JS\n        js_client_info: {}\n      },\n      log_source: SettingsService.getInstance().logSource,\n      log_event\n    };\n\n    fetch(SettingsService.getInstance().logEndPointUrl, {\n      method: 'POST',\n      body: JSON.stringify(data)\n    })\n      .then(res => {\n        if (!res.ok) {\n          consoleLogger.info('Call to Firebase backend failed.');\n        }\n        return res.json();\n      })\n      .then(res => {\n        // Find the next call wait time from the response.\n        const requestOffset = Math.max(\n          DEFAULT_SEND_INTERVAL_MS,\n          parseInt(res.next_request_wait_millis, 10)\n        );\n        remainingTries = DEFAULT_REMAINING_TRIES;\n        // Schedule the next process.\n        processQueue(requestOffset);\n      })\n      .catch(() => {\n        /**\n         * If the request fails for some reason, add the events that were attempted\n         * back to the primary queue to retry later.\n         */\n        queue = [...staged, ...queue];\n        remainingTries--;\n        consoleLogger.info(`Tries left: ${remainingTries}.`);\n        processQueue(DEFAULT_SEND_INTERVAL_MS);\n      });\n  }, timeOffset);\n}\n\nprocessQueue(INITIAL_SEND_TIME_DELAY_MS);\n\nfunction addToQueue(evt: BatchEvent): void {\n  if (!evt.eventTime || !evt.message) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_CC_LOG);\n  }\n  // Add the new event to the queue.\n  queue = [...queue, evt];\n}\n\n/** Log handler for cc service to send the performance logs to the server. */\nexport function ccHandler(serializer: (...args: any[]) => string): LogHandler {\n  // The underscores for loggerInstance and level parameters are added to avoid the\n  // noUnusedParameters related error.\n  return (_loggerInstance: Logger, _level: LogLevel, ...args) => {\n    const message = serializer(...args);\n    addToQueue({\n      message,\n      eventTime: Date.now()\n    });\n  };\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getIid } from './iid_service';\nimport { NetworkRequest } from '../resources/network_request';\nimport { Trace } from '../resources/trace';\nimport { Api } from './api_service';\nimport { SettingsService } from './settings_service';\nimport {\n  getServiceWorkerStatus,\n  getVisibilityState,\n  VisibilityState,\n  getEffectiveConnectionType\n} from '../utils/attributes_utils';\nimport {\n  isPerfInitialized,\n  getInitializationPromise\n} from './initialization_service';\nimport { Logger } from '@firebase/logger';\nimport { ccHandler } from './cc_service';\nimport { SDK_VERSION } from '../constants';\n\nconst enum ResourceType {\n  NetworkRequest,\n  Trace\n}\n\ninterface ApplicationInfo {\n  google_app_id: string;\n  app_instance_id?: string;\n  web_app_info: WebAppInfo;\n  application_process_state: number;\n}\n\ninterface WebAppInfo {\n  sdk_version: string;\n  page_url: string;\n  service_worker_status: number;\n  visibility_state: number;\n  effective_connection_type: number;\n}\n\ninterface PerfNetworkLog {\n  application_info: ApplicationInfo;\n  network_request_metric: NetworkRequestMetric;\n}\n\ninterface PerfTraceLog {\n  application_info: ApplicationInfo;\n  trace_metric: TraceMetric;\n}\n\ninterface NetworkRequestMetric {\n  url: string;\n  http_method: number;\n  http_response_code: number;\n  response_payload_bytes?: number;\n  client_start_time_us?: number;\n  time_to_response_initiated_us?: number;\n  time_to_response_completed_us?: number;\n}\n\ninterface TraceMetric {\n  name: string;\n  is_auto: boolean;\n  client_start_time_us: number;\n  duration_us: number;\n  counters?: Array<{ key: string; value: number }>;\n  custom_attributes?: Array<{ key: string; value: string }>;\n}\n\nlet logger: Logger | undefined;\n// This method is not called before initialization.\nfunction getLogger(): Logger {\n  if (logger) return logger;\n  const ccLogger = ccHandler(serializer);\n  logger = new Logger('@firebase/performance/cc');\n  logger.logHandler = ccLogger;\n  return logger;\n}\n\nexport function logTrace(trace: Trace): void {\n  const settingsService = SettingsService.getInstance();\n  // Do not log if trace is auto generated and instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled && trace.isAuto) return;\n  // Do not log if trace is custom and data collection is disabled.\n  if (!settingsService.dataCollectionEnabled && !trace.isAuto) return;\n  // Only log the page load auto traces if page is visible.\n  if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) return;\n\n  if (!settingsService.loggingEnabled || !settingsService.logTraceAfterSampling)\n    return;\n\n  if (isPerfInitialized()) {\n    sendTraceLog(trace);\n  } else {\n    // Custom traces can be used before the initialization but logging\n    // should wait until after.\n    getInitializationPromise().then(\n      () => sendTraceLog(trace),\n      () => sendTraceLog(trace)\n    );\n  }\n}\n\nfunction sendTraceLog(trace: Trace): void {\n  if (getIid()) {\n    setTimeout(() => getLogger().log(trace, ResourceType.Trace), 0);\n  }\n}\n\nexport function logNetworkRequest(networkRequest: NetworkRequest): void {\n  const settingsService = SettingsService.getInstance();\n  // Do not log network requests if instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled) return;\n  // Do not log the js sdk's call to cc service to avoid unnecessary cycle.\n  if (networkRequest.url === settingsService.logEndPointUrl.split('?')[0])\n    return;\n\n  if (\n    !settingsService.loggingEnabled ||\n    !settingsService.logNetworkAfterSampling\n  )\n    return;\n\n  setTimeout(\n    () => getLogger().log(networkRequest, ResourceType.NetworkRequest),\n    0\n  );\n}\n\nfunction serializer(resource: {}, resourceType: ResourceType): string {\n  if (resourceType === ResourceType.NetworkRequest) {\n    return serializeNetworkRequest(resource as NetworkRequest);\n  }\n  return serializeTrace(resource as Trace);\n}\n\nfunction serializeNetworkRequest(networkRequest: NetworkRequest): string {\n  const networkRequestMetric: NetworkRequestMetric = {\n    url: networkRequest.url,\n    http_method: 1,\n    http_response_code: 200,\n    response_payload_bytes: networkRequest.responsePayloadBytes,\n    client_start_time_us: networkRequest.startTimeUs,\n    time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\n    time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\n  };\n  const perfMetric: PerfNetworkLog = {\n    application_info: getApplicationInfo(),\n    network_request_metric: networkRequestMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction serializeTrace(trace: Trace): string {\n  const traceMetric: TraceMetric = {\n    name: trace.name,\n    is_auto: trace.isAuto,\n    client_start_time_us: trace.startTimeUs,\n    duration_us: trace.durationUs\n  };\n\n  if (Object.keys(trace.counters).length !== 0) {\n    traceMetric.counters = convertToKeyValueArray(trace.counters);\n  }\n  const customAttributes = trace.getAttributes();\n  if (Object.keys(customAttributes).length !== 0) {\n    traceMetric.custom_attributes = convertToKeyValueArray(customAttributes);\n  }\n\n  const perfMetric: PerfTraceLog = {\n    application_info: getApplicationInfo(),\n    trace_metric: traceMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction getApplicationInfo(): ApplicationInfo {\n  return {\n    google_app_id: SettingsService.getInstance().getAppId(),\n    app_instance_id: getIid(),\n    web_app_info: {\n      sdk_version: SDK_VERSION,\n      page_url: Api.getInstance().getUrl(),\n      service_worker_status: getServiceWorkerStatus(),\n      visibility_state: getVisibilityState(),\n      effective_connection_type: getEffectiveConnectionType()\n    },\n    application_process_state: 0\n  };\n}\n\nfunction convertToKeyValueArray<T>(obj: {\n  [key: string]: T;\n}): Array<{\n  key: string;\n  value: T;\n}> {\n  const keys = Object.keys(obj);\n  return keys.map(key => ({ key, value: obj[key] }));\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  TRACE_START_MARK_PREFIX,\n  TRACE_STOP_MARK_PREFIX,\n  TRACE_MEASURE_PREFIX,\n  OOB_TRACE_PAGE_LOAD_PREFIX,\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME\n} from '../constants';\nimport { Api } from '../services/api_service';\nimport { logTrace } from '../services/perf_logger';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport { PerformanceTrace } from '@firebase/performance-types';\n\nconst enum TraceState {\n  UNINITIALIZED = 1,\n  RUNNING,\n  TERMINATED\n}\n\nexport class Trace implements PerformanceTrace {\n  private state: TraceState = TraceState.UNINITIALIZED;\n  startTimeUs!: number;\n  durationUs!: number;\n  private customAttributes: { [key: string]: string } = {};\n  counters: { [counterName: string]: number } = {};\n  private api = Api.getInstance();\n  private randomId = Math.floor(Math.random() * 1000000);\n  private traceStartMark!: string;\n  private traceStopMark!: string;\n  private traceMeasure!: string;\n\n  /**\n   * @param name The name of the trace.\n   * @param isAuto If the trace is auto-instrumented.\n   * @param traceMeasureName The name of the measure marker in user timing specification. This field\n   * is only set when the trace is built for logging when the user directly uses the user timing\n   * api (performance.mark and performance.measure).\n   */\n  constructor(\n    readonly name: string,\n    readonly isAuto = false,\n    traceMeasureName?: string\n  ) {\n    if (!this.isAuto) {\n      this.traceStartMark = `${TRACE_START_MARK_PREFIX}-${this.randomId}-${\n        this.name\n      }`;\n      this.traceStopMark = `${TRACE_STOP_MARK_PREFIX}-${this.randomId}-${\n        this.name\n      }`;\n      this.traceMeasure =\n        traceMeasureName ||\n        `${TRACE_MEASURE_PREFIX}-${this.randomId}-${this.name}`;\n\n      if (traceMeasureName) {\n        // For the case of direct user timing traces, no start stop will happen. The measure object\n        // is already available.\n        this.calculateTraceMetrics();\n      }\n    }\n  }\n\n  /**\n   * Starts a trace. The measurement of the duration starts at this point.\n   */\n  start(): void {\n    if (this.state !== TraceState.UNINITIALIZED) {\n      throw ERROR_FACTORY.create(ErrorCode.TRACE_STARTED_BEFORE, {\n        traceName: this.name\n      });\n    }\n    this.api.mark(this.traceStartMark);\n    this.state = TraceState.RUNNING;\n  }\n\n  /**\n   * Stops the trace. The measurement of the duration of the trace stops at this point and trace\n   * is logged.\n   */\n  stop(): void {\n    if (this.state !== TraceState.RUNNING) {\n      throw ERROR_FACTORY.create(ErrorCode.TRACE_STOPPED_BEFORE, {\n        traceName: this.name\n      });\n    }\n    this.state = TraceState.TERMINATED;\n    this.api.mark(this.traceStopMark);\n    this.api.measure(\n      this.traceMeasure,\n      this.traceStartMark,\n      this.traceStopMark\n    );\n    this.calculateTraceMetrics();\n    logTrace(this);\n  }\n\n  /**\n   * Records a trace with predetermined values. If this method is used a trace is created and logged\n   * directly. No need to use start and stop methods.\n   * @param startTime Trace start time since epoch in millisec\n   * @param duration The duraction of the trace in millisec\n   * @param options An object which can optionally hold maps of custom metrics and custom attributes\n   */\n  record(\n    startTime: number,\n    duration: number,\n    options?: {\n      metrics?: { [key: string]: number };\n      attributes?: { [key: string]: string };\n    }\n  ): void {\n    this.durationUs = Math.floor(duration * 1000);\n    this.startTimeUs = Math.floor(startTime * 1000);\n    if (options && options.attributes) {\n      this.customAttributes = { ...options.attributes };\n    }\n    if (options && options.metrics) {\n      for (const metric of Object.keys(options.metrics)) {\n        if (!isNaN(Number(options.metrics[metric]))) {\n          this.counters[metric] = Number(Math.floor(options.metrics[metric]));\n        }\n      }\n    }\n    logTrace(this);\n  }\n\n  /**\n   * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\n   * custom metric if one with the given name does not exist.\n   * @param counter Name of the custom metric\n   * @param num Increment by value\n   */\n  incrementMetric(counter: string, num = 1): void {\n    if (this.counters[counter] === undefined) {\n      this.counters[counter] = 0;\n    }\n    this.counters[counter] += num;\n  }\n\n  /**\n   * Sets a custom metric to a specified value. Will create a new custom metric if one with the\n   * given name does not exist.\n   * @param counter Name of the custom metric\n   * @param num Set custom metric to this value\n   */\n  putMetric(counter: string, num: number): void {\n    this.counters[counter] = num;\n  }\n\n  /**\n   * Returns the value of the custom metric by that name. If a custom metric with that name does\n   * not exist will return zero.\n   * @param counter\n   */\n  getMetric(counter: string): number {\n    return this.counters[counter] || 0;\n  }\n\n  /**\n   * Sets a custom attribute of a trace to a certain value.\n   * @param attr\n   * @param value\n   */\n  putAttribute(attr: string, value: string): void {\n    this.customAttributes[attr] = value;\n  }\n\n  /**\n   * Retrieves the value a custom attribute of a trace is set to.\n   * @param attr\n   */\n  getAttribute(attr: string): string | undefined {\n    return this.customAttributes[attr];\n  }\n\n  removeAttribute(attr: string): void {\n    if (this.customAttributes[attr] === undefined) return;\n    delete this.customAttributes[attr];\n  }\n\n  getAttributes(): { [key: string]: string } {\n    return { ...this.customAttributes };\n  }\n\n  private setStartTime(startTime: number): void {\n    this.startTimeUs = startTime;\n  }\n\n  private setDuration(duration: number): void {\n    this.durationUs = duration;\n  }\n\n  /**\n   * Calculates and assigns the duration and start time of the trace using the measure performance\n   * entry.\n   */\n  private calculateTraceMetrics(): void {\n    const perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\n    const perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\n    if (perfMeasureEntry) {\n      this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\n      this.startTimeUs = Math.floor(\n        (perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000\n      );\n    }\n  }\n\n  /**\n   * @param navigationTimings A single element array which contains the navigationTIming object of\n   * the page load\n   * @param paintTimings A array which contains paintTiming object of the page load\n   * @param firstInputDelay First input delay in millisec\n   */\n  static createOobTrace(\n    navigationTimings: PerformanceNavigationTiming[],\n    paintTimings: PerformanceEntry[],\n    firstInputDelay?: number\n  ): void {\n    const route = Api.getInstance().getUrl();\n    if (!route) return;\n    const trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\n    const timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\n    trace.setStartTime(timeOriginUs);\n\n    // navigationTimings includes only one element.\n    if (navigationTimings && navigationTimings[0]) {\n      trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\n      trace.incrementMetric(\n        'domInteractive',\n        Math.floor(navigationTimings[0].domInteractive * 1000)\n      );\n      trace.incrementMetric(\n        'domContentLoadedEventEnd',\n        Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000)\n      );\n      trace.incrementMetric(\n        'loadEventEnd',\n        Math.floor(navigationTimings[0].loadEventEnd * 1000)\n      );\n    }\n\n    const FIRST_PAINT = 'first-paint';\n    const FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\n    if (paintTimings) {\n      const firstPaint = paintTimings.find(\n        paintObject => paintObject.name === FIRST_PAINT\n      );\n      if (firstPaint && firstPaint.startTime) {\n        trace.incrementMetric(\n          FIRST_PAINT_COUNTER_NAME,\n          Math.floor(firstPaint.startTime * 1000)\n        );\n      }\n      const firstContentfulPaint = paintTimings.find(\n        paintObject => paintObject.name === FIRST_CONTENTFUL_PAINT\n      );\n      if (firstContentfulPaint && firstContentfulPaint.startTime) {\n        trace.incrementMetric(\n          FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n          Math.floor(firstContentfulPaint.startTime * 1000)\n        );\n      }\n\n      if (firstInputDelay) {\n        trace.incrementMetric(\n          FIRST_INPUT_DELAY_COUNTER_NAME,\n          Math.floor(firstInputDelay * 1000)\n        );\n      }\n    }\n\n    logTrace(trace);\n  }\n\n  static createUserTimingTrace(measureName: string): void {\n    const trace = new Trace(measureName, false, measureName);\n    logTrace(trace);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Api } from '../services/api_service';\nimport { logNetworkRequest } from '../services/perf_logger';\n\n// The order of values of this enum should not be changed.\nexport const enum HttpMethod {\n  HTTP_METHOD_UNKNOWN = 0,\n  GET = 1,\n  PUT = 2,\n  POST = 3,\n  DELETE = 4,\n  HEAD = 5,\n  PATCH = 6,\n  OPTIONS = 7,\n  TRACE = 8,\n  CONNECT = 9\n}\n\n// Durations are in microseconds.\nexport interface NetworkRequest {\n  url: string;\n  httpMethod?: HttpMethod;\n  requestPayloadBytes?: number;\n  responsePayloadBytes?: number;\n  httpResponseCode?: number;\n  responseContentType?: string;\n  startTimeUs?: number;\n  timeToRequestCompletedUs?: number;\n  timeToResponseInitiatedUs?: number;\n  timeToResponseCompletedUs?: number;\n}\n\nexport function createNetworkRequestEntry(entry: PerformanceEntry): void {\n  const performanceEntry = entry as PerformanceResourceTiming;\n  if (!performanceEntry || performanceEntry.responseStart === undefined) return;\n  const timeOrigin = Api.getInstance().getTimeOrigin();\n  const startTimeUs = Math.floor(\n    (performanceEntry.startTime + timeOrigin) * 1000\n  );\n  const timeToResponseInitiatedUs = performanceEntry.responseStart\n    ? Math.floor(\n        (performanceEntry.responseStart - performanceEntry.startTime) * 1000\n      )\n    : undefined;\n  const timeToResponseCompletedUs = Math.floor(\n    (performanceEntry.responseEnd - performanceEntry.startTime) * 1000\n  );\n  // Remove the query params from logged network request url.\n  const url = performanceEntry.name && performanceEntry.name.split('?')[0];\n  const networkRequest: NetworkRequest = {\n    url,\n    responsePayloadBytes: performanceEntry.transferSize,\n    startTimeUs,\n    timeToResponseInitiatedUs,\n    timeToResponseCompletedUs\n  };\n\n  logNetworkRequest(networkRequest);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Api } from './api_service';\nimport { Trace } from '../resources/trace';\nimport { createNetworkRequestEntry } from '../resources/network_request';\nimport { TRACE_MEASURE_PREFIX } from '../constants';\nimport { getIid } from './iid_service';\n\nconst FID_WAIT_TIME_MS = 5000;\n\nexport function setupOobResources(): void {\n  // Do not initialize unless iid is available.\n  if (!getIid()) return;\n  // The load event might not have fired yet, and that means performance navigation timing\n  // object has a duration of 0. The setup should run after all current tasks in js queue.\n  setTimeout(() => setupOobTraces(), 0);\n  setTimeout(() => setupNetworkRequests(), 0);\n  setTimeout(() => setupUserTimingTraces(), 0);\n}\n\nfunction setupNetworkRequests(): void {\n  const api = Api.getInstance();\n  const resources = api.getEntriesByType('resource');\n  for (const resource of resources) {\n    createNetworkRequestEntry(resource);\n  }\n  api.setupObserver('resource', createNetworkRequestEntry);\n}\n\nfunction setupOobTraces(): void {\n  const api = Api.getInstance();\n  const navigationTimings = api.getEntriesByType(\n    'navigation'\n  ) as PerformanceNavigationTiming[];\n  const paintTimings = api.getEntriesByType('paint');\n  // If First Input Desly polyfill is added to the page, report the fid value.\n  // https://github.com/GoogleChromeLabs/first-input-delay\n  if (api.onFirstInputDelay) {\n    // If the fid call back is not called for certain time, continue without it.\n    let timeoutId: any = setTimeout(() => {\n      Trace.createOobTrace(navigationTimings, paintTimings);\n      timeoutId = undefined;\n    }, FID_WAIT_TIME_MS);\n    api.onFirstInputDelay((fid: number) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        Trace.createOobTrace(navigationTimings, paintTimings, fid);\n      }\n    });\n  } else {\n    Trace.createOobTrace(navigationTimings, paintTimings);\n  }\n}\n\nfunction setupUserTimingTraces(): void {\n  const api = Api.getInstance();\n  // Run through the measure performance entries collected up to this point.\n  const measures = api.getEntriesByType('measure');\n  for (const measure of measures) {\n    createUserTimingTrace(measure);\n  }\n  // Setup an observer to capture the measures from this point on.\n  api.setupObserver('measure', createUserTimingTrace);\n}\n\nfunction createUserTimingTrace(measure: PerformanceEntry): void {\n  const measureName = measure.name;\n  // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\n  if (\n    measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\n    TRACE_MEASURE_PREFIX\n  )\n    return;\n  Trace.createUserTimingTrace(measureName);\n}\n","/**\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Trace } from '../resources/trace';\nimport { setupOobResources } from '../services/oob_resources_service';\nimport { SettingsService } from '../services/settings_service';\nimport { getInitializationPromise } from '../services/initialization_service';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebasePerformance } from '@firebase/performance-types';\n\nexport class PerformanceController implements FirebasePerformance {\n  constructor(readonly app: FirebaseApp) {\n    getInitializationPromise().then(setupOobResources, setupOobResources);\n  }\n\n  trace(name: string): Trace {\n    return new Trace(name);\n  }\n\n  set instrumentationEnabled(val: boolean) {\n    SettingsService.getInstance().instrumentationEnabled = val;\n  }\n  get instrumentationEnabled() {\n    return SettingsService.getInstance().instrumentationEnabled;\n  }\n\n  set dataCollectionEnabled(val: boolean) {\n    SettingsService.getInstance().dataCollectionEnabled = val;\n  }\n  get dataCollectionEnabled() {\n    return SettingsService.getInstance().dataCollectionEnabled;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { FirebaseApp, FirebaseNamespace } from '@firebase/app-types';\nimport {\n  _FirebaseNamespace,\n  FirebaseServiceFactory\n} from '@firebase/app-types/private';\nimport { PerformanceController } from './src/controllers/perf';\nimport { setupApi } from './src/services/api_service';\nimport { SettingsService } from './src/services/settings_service';\nimport { consoleLogger } from './src/utils/console_logger';\nimport { ERROR_FACTORY, ErrorCode } from './src/utils/errors';\nimport { FirebasePerformance } from '@firebase/performance-types';\n\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport function registerPerformance(instance: FirebaseNamespace): void {\n  const factoryMethod: FirebaseServiceFactory = (app: FirebaseApp) => {\n    if (app.name !== DEFAULT_ENTRY_NAME) {\n      throw ERROR_FACTORY.create(ErrorCode.FB_NOT_DEFAULT);\n    }\n    SettingsService.getInstance().firebaseAppInstance = app;\n    return new PerformanceController(app);\n  };\n\n  // Register performance with firebase-app.\n  const namespaceExports = {};\n  (instance as _FirebaseNamespace).INTERNAL.registerService(\n    'performance',\n    factoryMethod,\n    namespaceExports\n  );\n}\n\nif (window && fetch && Promise) {\n  setupApi(window);\n  registerPerformance(firebase);\n} else {\n  consoleLogger.info(\n    'Firebase Performance cannot start if browser does not support fetch and Promise.'\n  );\n}\n\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    performance?: {\n      (app?: FirebaseApp): FirebasePerformance;\n    };\n  }\n  interface FirebaseApp {\n    performance?(): FirebasePerformance;\n  }\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","deepExtend","target","source","constructor","Date","getTime","undefined","prop","patchProperty","obj","value","code","message","_super","_this","FirebaseError","Error","captureStackTrace","ErrorFactory","create","__","tslib_1.__extends","service","serviceName","errors","data","fullCode","template","replace","PATTERN","_","key","toString","fullMessage","error","_a","keys","_i","slice","console","warn","ERRORS","appErrors","args","DEFAULT_ENTRY_NAME","options","config","firebase_","name_","name","automaticDataCollectionEnabled_","automaticDataCollectionEnabled","options_","FirebaseAppLiteImpl","checkDestroyed_","val","Promise","resolve","then","INTERNAL","removeApp","services","services_","serviceKey","_c","_b","instanceKey","push","all","map","delete","isDeleted_","instanceIdentifier","instanceSpecifier","factories","extendApp","bind","props","contains","firebase","namespace","firebaseAppImpl","apps","appHooks","__esModule","initializeApp","rawConfig","name_1","String","app","callAppHooks","SDK_VERSION","registerService","createService","serviceProperties","appHook","allowMultipleInstances","serviceNamespace","appArg","getApps","forEach","_getService","useAsService","eventName","factoryName","useService","defineProperty","get","createFirebaseNamespaceCore","createFirebaseNamespaceLite","promisifyRequest","request","reject","onsuccess","result","onerror","promisifyRequestCall","method","proxyProperties","ProxyClass","targetProp","properties","set","proxyRequestMethods","Constructor","proxyMethods","proxyCursorRequestMethods","Cursor","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","arr","callback","nativeObject","getAll","query","count","instance","items","iterateCursor","continue","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","INSTALLATIONS_API_URL","TOKEN_EXPIRATION_BUFFER","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","isServerError","includes","extractAppConfig","appName","projectId","apiKey","appId","getInstallationsEndpoint","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","responseExpiresIn","Number","creationTime","now","getErrorFromResponse","requestName","json","responseJson","errorData","serverCode","serverMessage","serverStatus","status","getHeaders","Headers","Content-Type","Accept","x-goog-api-key","getHeadersWithAuth","appConfig","refreshToken","headers","append","sleep","ms","setTimeout","bufferToBase64UrlSafe","buffer","array","Uint8Array","btoa","fromCharCode","generateFid","fidByteArray","crypto","getRandomValues","substr","upgradeCallback","LogLevel","OBJECT_STORE_NAME","dbPromise","upgradeDB","indexedDB","onupgradeneeded","event","getKey","tx","put","remove","update","updateFn","oldValue","newValue","getInstallationEntry","oldEntry","installationEntry","entry","fid","registrationStatus","hasInstallationRequestTimedOut","updateOrCreateFid","entryWithPromise","registrationPromise","updateInstallationRequest","waitUntilFidRegistration","navigator","onLine","registrationPromiseWithError","inProgressEntry","registrationTime","endpoint","body","authVersion","sdkVersion","JSON","stringify","fetch","ok","responseValue","authToken","createInstallation","registeredInstallationEntry","e_1","registerInstallation","triggerRegistrationIfNecessary","generateAuthToken","installation","getToken","completeInstallationRegistration","isEntryRegistered","inProgressAuthToken","oldAuthToken","tokenPromise","updateAuthTokenRequest","waitUntilAuthTokenRequest","requestTime","updatedInstallationEntry","fetchAuthTokenFromServer","fetchAuthToken","deleteInstallation","getId","catch","deleteInstallationRequest","apiInstance","windowInstance","settingsServiceInstance","defaultLogLevel","INFO","defaultLogHandler","logType","logLevel","toISOString","DEBUG","VERBOSE","log","info","WARN","ERROR","Logger","_logLevel","TypeError","_logHandler","TRACE_MEASURE_PREFIX","CONFIG_LOCAL_STORAGE_KEY","CONFIG_EXPIRY_LOCAL_STORAGE_KEY","SERVICE_NAME","window","performance","PerformanceObserver","windowLocation","location","document","localStorage","perfMetrics","onFirstInputDelay","Api","href","split","mark","measureName","mark1","mark2","measure","type","getEntriesByType","getEntriesByName","timeOrigin","timing","navigationStart","entryType","list","getEntries","observe","entryTypes","iid","VisibilityState","SettingsService","firebaseAppInstance","getIid","getVisibilityState","getInstance","visibilityState","VISIBLE","HIDDEN","PRERENDER","UNKNOWN","consoleLogger","REMOTE_CONFIG_SDK_VERSION","SECONDARY_CONFIGS","loggingEnabled","FIS_AUTH_PREFIX","getConfig","authTokenPromise","expiryString","getItem","expiry","configStringified","configResponse","parse","getStoredConfig","processConfig","installations","authTokenVal","getProjectId","configEndPoint","getApiKey","Request","Authorization","app_instance_id","app_instance_id_token","app_id","getAppId","app_version","sdk_version","COULD_NOT_GET_CONFIG_MSG","setItem","configTimeToLive","storeConfig","entries","fpr_enabled","fpr_log_source","logSource","fpr_log_endpoint_url","logEndPointUrl","fpr_vc_network_request_sampling_rate","networkRequestsSamplingRate","fpr_vc_trace_sampling_rate","tracesSamplingRate","logTraceAfterSampling","shouldLogAfterSampling","logNetworkAfterSampling","samplingRate","Math","random","initializationPromise","initializationStatus","getInitializationPromise","readyState","handler_1","removeEventListener","addEventListener","iidPromise","iidVal","changeInitializationStatus","logger","DEFAULT_SEND_INTERVAL_MS","DEFAULT_REMAINING_TRIES","remainingTries","queue","ccHandler","serializer","_loggerInstance","_level","evt","eventTime","addToQueue","getLogger","ccLogger","logHandler","logTrace","trace","settingsService","instrumentationEnabled","isAuto","dataCollectionEnabled","sendTraceLog","resource","resourceType","networkRequestMetric","url","networkRequest","http_method","http_response_code","response_payload_bytes","responsePayloadBytes","client_start_time_us","startTimeUs","time_to_response_initiated_us","timeToResponseInitiatedUs","time_to_response_completed_us","timeToResponseCompletedUs","perfMetric","application_info","getApplicationInfo","network_request_metric","traceMetric","is_auto","duration_us","durationUs","counters","convertToKeyValueArray","customAttributes","getAttributes","custom_attributes","trace_metric","serializeTrace","google_app_id","web_app_info","page_url","getUrl","service_worker_status","serviceWorker","controller","visibility_state","effective_connection_type","navigatorConnection","connection","effectiveType","getEffectiveConnectionType","application_process_state","processQueue","timeOffset","staged","log_event","source_extension_json","event_time_ms","request_time_ms","client_info","client_type","js_client_info","log_source","res","requestOffset","max","parseInt","next_request_wait_millis","traceMeasureName","floor","traceStartMark","TRACE_START_MARK_PREFIX","randomId","traceStopMark","TRACE_STOP_MARK_PREFIX","traceMeasure","calculateTraceMetrics","Trace","state","traceName","api","startTime","duration","attributes","metrics","metric","isNaN","counter","num","attr","perfMeasureEntries","perfMeasureEntry","getTimeOrigin","navigationTimings","paintTimings","firstInputDelay","route","timeOriginUs","setStartTime","setDuration","incrementMetric","domInteractive","domContentLoadedEventEnd","loadEventEnd","firstPaint","find","paintObject","firstContentfulPaint","createNetworkRequestEntry","performanceEntry","responseStart","responseEnd","transferSize","FID_WAIT_TIME_MS","setupOobResources","timeoutId_1","createOobTrace","clearTimeout","setupOobTraces","resources","resources_1","setupObserver","setupNetworkRequests","measures","measures_1","createUserTimingTrace","setupUserTimingTraces","substring","PerformanceController"],"mappings":"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"}